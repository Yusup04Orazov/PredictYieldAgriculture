import os
import numpy as np
from netCDF4 import Dataset
import datetime
import h5py
import xarray as xr  # Importing xarray

# Define the dimensions of the data
years = 25  # number of years
days_per_year = 365  # number of days per year
time_dim = years * days_per_year
lat_dim = 10  # latitude range specific to Nebraska
lon_dim = 10  # longitude range specific to Nebraska

# Create the main folder and the dataset folder
assets_folder = 'assets'
dataset_folder = os.path.join(assets_folder, 'dataset')
os.makedirs(dataset_folder, exist_ok=True)

# Create the dataset inside the dataset folder
ncfile_path = os.path.join(dataset_folder, 'nebraska_climate_data.nc')
ncfile = Dataset(ncfile_path, mode='w', format='NETCDF4_CLASSIC')

# Create the dimensions
ncfile.createDimension('time', time_dim)
ncfile.createDimension('lat', lat_dim)
ncfile.createDimension('lon', lon_dim)

# Create the variables
times = ncfile.createVariable('time', np.float64, ('time',))
latitudes = ncfile.createVariable('lat', np.float32, ('lat',))
longitudes = ncfile.createVariable('lon', np.float32, ('lon',))
temperature = ncfile.createVariable('tas', np.float32, ('time', 'lat', 'lon'))
precipitation = ncfile.createVariable('pr', np.float32, ('time', 'lat', 'lon'))
solar_radiation = ncfile.createVariable('rsds', np.float32, ('time', 'lat', 'lon'))
humidity = ncfile.createVariable('hurs', np.float32, ('time', 'lat', 'lon'))

# Create the data arrays
latitudes[:] = np.linspace(40.0, 42.5, lat_dim)  # Approximate latitudes for Nebraska
longitudes[:] = np.linspace(-100.0, -96.0, lon_dim)  # Approximate longitudes for Nebraska
times[:] = np.arange(time_dim)

# Generate dummy data and save it in HDF5 format
for t in range(time_dim):
    # Calculate the current year and day of the year
    current_year = 2000 + (t // days_per_year)
    day_of_year = (t % days_per_year) + 1

    # Create folders for the current year and day
    year_folder = os.path.join(assets_folder, f'year_{current_year}')
    os.makedirs(year_folder, exist_ok=True)
    day_folder = os.path.join(year_folder, f'day_{day_of_year}')
    os.makedirs(day_folder, exist_ok=True)

    # Generate data for the day
    day_temperature = np.zeros((lat_dim, lon_dim))
    day_precipitation = np.zeros((lat_dim, lon_dim))
    day_solar_radiation = np.zeros((lat_dim, lon_dim))
    day_humidity = np.zeros((lat_dim, lon_dim))

    for lat in range(lat_dim):
        day_temperature[lat, :] = 10 + 10 * np.sin(np.pi * latitudes[lat] / 45) * np.cos(2 * np.pi * t / time_dim)
        day_precipitation[lat, :] = 5 * np.random.rand(lon_dim)
        day_solar_radiation[lat, :] = 200 + 50 * np.sin(np.pi * latitudes[lat] / 45) * np.cos(2 * np.pi * t / time_dim)
        day_humidity[lat, :] = 50 + 20 * np.random.rand(lon_dim)

    # Save data to HDF5 file
    hdf5_filename = os.path.join(day_folder, f'day_{day_of_year}.hdf')
    with h5py.File(hdf5_filename, 'w') as hdf:
        hdf.create_dataset('temperature', data=day_temperature)
        hdf.create_dataset('precipitation', data=day_precipitation)
        hdf.create_dataset('solar_radiation', data=day_solar_radiation)
        hdf.create_dataset('humidity', data=day_humidity)

# Add global attributes
ncfile.description = 'Nebraska climate data'
ncfile.history = 'Created ' + datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
ncfile.source = 'Generated by create_nebraska_netcdf.py'

# Add variable attributes
latitudes.units = 'degrees north'
longitudes.units = 'degrees east'
times.units = 'days since 2000-01-01'
temperature.units = 'Celsius'
precipitation.units = 'mm'
solar_radiation.units = 'W/mÂ²'
humidity.units = 'percent'

# Close the dataset
ncfile.close()

# Example of using xarray to open and work with the dataset
ds = xr.open_dataset(ncfile_path)  # Using xarray to open the NetCDF file
print(ds)  # Print the dataset information



# <xarray.Dataset> Size: 14MB
# Dimensions:  (time: 8760, lat: 10, lon: 10)
# Coordinates:
#   * time     (time) datetime64[ns] 70kB 2000-01-01 2000-01-02 ... 2023-12-25
#   * lat      (lat) float32 40B 40.0 40.28 40.56 40.83 ... 41.67 41.94 42.22 42.5
#   * lon      (lon) float32 40B -100.0 -99.56 -99.11 ... -96.89 -96.44 -96.0
# Data variables:
#     tas      (time, lat, lon) float32 4MB ...
#     pr       (time, lat, lon) float32 4MB ...
#     rsds     (time, lat, lon) float32 4MB ...
#     hurs     (time, lat, lon) float32 4MB ...
# Attributes:
#     description:  Nebraska climate data
#     history:      Created 2024-05-28 16:03:00
#     source:       Generated by create_nebraska_netcdf.py